# if the node is already contactable we can skip the remaining steps

- name: check node is up and running
  delegate_to: localhost
  wait_for:
    host: "{{ node }}"
    port: 22
    connect_timeout: 1
    timeout: 1
  ignore_errors: true
  register: node_status

# this seems a little cheesy but I don't know a reliable way to connect to the node
# we just created. This can reliably update the filesystem to the node to apply
# the changes we need to make, including giving the node a new hostname
- name: Mount node's disk to create an ansible user and rename the host
  when: node_status is failed
  block:
    - name: turn off all nodes
      raw: tpi power off -n {{ hostvars[item].host_num }}
      loop: "{{ this_bmc_nodes }}"

    - name: mount node disk into BMC filesystem
      raw: tpi advanced msd -n {{ hostvars[node].host_num }}

    - name: check which block device got created and get its 2nd partition
      raw: ls /dev/sd*2
      register: block_device

    - name: extract the block device partition from raw output
      set_fact:
        partition: "{{ block_device.stdout_lines[0] | regex_search('(/dev/sd[a-z]?2)','\\1') | first }}"

    - name: debug - report the block device partition
      debug:
        var: partition

    - name: mount the block device
      raw: mkdir -p /mnt/node && mount {{ partition }} /mnt/node

    - name: modify node filesystem
      raw: |
        # set the hostname
        echo {{ node }} > /mnt/node/etc/hostname
        # remove the ubuntu user and/or previous ansible user
        # sed -i '/ubuntu\|ansible/d' /mnt/node/etc/passwd
        # sed -i '/ubuntu\|ansible/d' /mnt/node/etc/shadow
        # sed -i '/ubuntu\|ansible/d' /mnt/node/etc/group
        # create ansible user
        echo 'ansible:x:1000:1001:Ansible User:/home/ansible:/bin/bash' >> /mnt/node/etc/passwd
        echo 'ansible:x:1000:' >> /mnt/node/etc/shadow
        echo 'ansible:x:1001:' >> /mnt/node/etc/group
        mkdir -p /mnt/node/home/ansible/.ssh
        # authorize via public key
        echo {{ ssh_public_key }} > /mnt/node/home/ansible/.ssh/authorized_keys
        # TODO REMOVE
        mkdir -p /mnt/node/home/ubuntu/.ssh
        echo {{ ssh_public_key }} > /mnt/node/home/ubuntu/.ssh/authorized_keys

    - name: unmount the block device
      raw: umount /mnt/node

    - name: reboot the node
      raw: tpi advanced normal -n {{ hostvars[node].host_num }}
