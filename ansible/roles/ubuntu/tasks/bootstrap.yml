# this seems a little cheesy but I don't know a reliable way to connect to the node
# we just created. This can reliably update the filesystem on the node to apply
# the changes we need to make, including giving the node a new hostname

# this guarentees the state of the node and msd will automatically turn in on
# maybe don't do this? We don't want cloud init to be half done when we switch
# to msd mode
# - name: turn off {{ node_name }} before mounting into BMC filesystem
#   raw: tpi power off -n {{ node.slot_num }}

- name: switch {{ node_name}} slot {{ node.slot_num }} to disk mode
  raw: tpi advanced msd -n {{ node.slot_num }}

- name: check which block device got created and get its 2nd partition
  raw: ls /dev/sd*2
  register: block_device

- name: extract the block device partition from raw output
  set_fact:
    partition: "{{ block_device.stdout_lines[0] | regex_search('(/dev/sd[a-z]?2)','\\1') | first }}"

- name: mount the block device {{ partition }} into the BMC filesystem
  raw: mkdir -p /mnt/node && mount {{ partition }} /mnt/node

- name: jinja render the cloud.cfg file
  delegate_to: localhost
  template:
    src: cloud.cfg
    dest: /tmp/cloud.cfg
    mode: 0600

- name: scp image to BMC
  delegate_to: localhost
  command: |-
    scp /tmp/cloud.cfg
    {{ tpi_user }}@{{ inventory_hostname }}:/mnt/node/etc/cloud/cloud.cfg
  register: node_modifications

- name: remove the cloud.cfg file
  delegate_to: localhost
  file:
    path: /tmp/cloud.cfg
    state: absent

- name: debug - report the modifications made to the node filesystem
  debug:
    var: node_modifications.stdout_lines

- name: unmount the block device
  raw: umount /mnt/node

- name: reboot {{ node_name }} in slot {{ node.slot_num }}
  raw: tpi advanced normal -n {{ node.slot_num }}
