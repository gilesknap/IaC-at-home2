# Flash an image onto one of the turingpi nodes
#
# commands are delegated to localhost or use 'raw'
# because the BMC has no python or disk space

- name: select the image to flash for rk1
  set_fact:
    image: "{{ image_info.rk1 }}"
  when: node.type == 'rk1'

- name: select the image to flash for rpi4 compute module
  set_fact:
    image: "{{ image_info.pi4 }}"
  when: node.type == 'pi4'

- name: check for existing image file
  raw: mkdir -p {{ tpi_images_path }} || test -f {{ image.osf_remote }}
  register: os_file_stat
  ignore_errors: true

- name: get OS image for {{ node.type }}
  delegate_to: localhost
  get_url:
    url: "{{ image.url }}"
    dest: "{{ image.os_file }}"
  register: os_file
  when: os_file_stat.rc != 0

- name: scp image to BMC
  delegate_to: localhost
  command: |-
    scp {{ image.os_file }}
    {{ tpi_user }}@{{ inventory_hostname }}:{{ image.osf_remote }}
  when: os_file_stat.rc != 0

# this guarentees the state of the node and flash will automatically turn in on
- name: turn off {{ node_name }} before flashing
  raw: tpi power off -n {{ node.slot_num }}

- name: flash image to {{ node_name }} slot {{ node.slot_num }} type {{ node.type }}
  raw: |-
    tpi flash -n {{ node.slot_num }} --image-path {{ image.osf_remote }} --sha256 {{ image.sha }}
  register: flash_results

- name: show flash results
  debug:
    var: flash_results
