# This can reliably update the filesystem on the node to apply
# the changes we need to make, including giving the node a new hostname.
# For this purpose, we change the cloud.cfg file to set the hostname and
# also add our ansible user to the system, including the ssh key as an
# authorized key.

# this guarantees the state of the node and msd will automatically turn in on
- name: Turn Off Node
  ansible.builtin.raw: tpi power off -n {{ node.slot_num }}
  args:
    creates: /tmp/flash.log

- name: Switch Node Slot To Disk Mode
  ansible.builtin.raw: tpi advanced msd -n {{ node.slot_num }}
  changed_when: true

- name: Check Block Device And Get Partition
  ansible.builtin.raw: ls /dev/sd*2
  register: block_device
  changed_when: true

- name: Extract Block Device Partition From Raw Output
  ansible.builtin.set_fact:
    partition: "{{ block_device.stdout_lines[0] | regex_search('(/dev/sd[a-z]?2)', '\\1') | first }}"

- name: Mount Block Device Into BMC Filesystem
  ansible.builtin.raw: mkdir -p /mnt/node && mount {{ partition }} /mnt/node
  changed_when: true

- name: Render Cloud.cfg File
  delegate_to: localhost
  ansible.builtin.template:
    src: cloud.cfg
    dest: /tmp/cloud.cfg
    mode: "0644"

- name: SCP Image To BMC
  delegate_to: localhost
  ansible.builtin.command: |-
    scp /tmp/cloud.cfg
    {{ tpi_user }}@{{ inventory_hostname }}:/mnt/node/etc/cloud/cloud.cfg
  register: node_modifications
  changed_when: true

- name: Report Modifications Made To Node Filesystem
  ansible.builtin.debug:
    var: node_modifications.stdout_lines

- name: Delete Cloud Init Cache To Force First Boot Configuration
  ansible.builtin.raw: rm -rf /mnt/node/var/lib/cloud
  changed_when: true

- name: Unmount Block Device
  ansible.builtin.raw: umount /mnt/node
  changed_when: true

- name: Reboot Node In Slot
  ansible.builtin.raw: tpi advanced normal -n {{ node.slot_num }}
  changed_when: true

# wait until the node is ready to accept ssh connections
- name: Wait for {{ node_name }}
  delegate_to: localhost
  ansible.builtin.wait_for:
    host: "{{ node_name }}"
    port: 22
  retries: 20
  delay: 6
