- name: Extract the group that lists this turing pi's nodes
  ansible.builtin.set_fact:
    nodes: "{{ groups[inventory_hostname + '_nodes'] }}"

- name: List the nodes for '{{ inventory_hostname }}'
  ansible.builtin.debug:
    var: nodes

- name: Check if the control plane node is contactable
  ansible.builtin.include_tasks: node_status.yml
  vars:
    node_name: "{{ k3s_control_plane }}"

- name: Check if the control plane node is in the host list
  ansible.builtin.set_fact:
    control_plane_in_host_list: |
      {{
      k3s_control_plane in nodes and
      k3s_control_plane in query('inventory_hostnames', ansible_limit | default('all'))
      }}
  run_once: true

- name: Query user to verify control plane re-flash
  ansible.builtin.pause:
    prompt: |
      WARNING *************************************************************************
      The control plane node '{{ k3s_control_plane }}' is not contactable.
      This means that this command will attempt a re-flash the control plane.

      Re-flashing the control plane will fully rebuild the cluster.
      And may result in data loss.

      Are you sure? (y/n)
  register: do_abort
  delegate_to: localhost
  when: (do_flash and control_plane_in_host_list) and (not node_status or flash_force)
  run_once: true

- name: Abort if user does not want to re-flash the control plane
  ansible.builtin.fail:
    msg: "User aborted the re-flash of the control plane"
  when: hostvars['localhost'].do_abort | default('y') != 'y'

- name: Process the nodes for '{{ inventory_hostname }}'
  ansible.builtin.include_tasks: node.yml
  loop: "{{ nodes }}"
  loop_control:
    loop_var: node_name
