- name: Check dependencies
  ansible.builtin.include_tasks: dependencies.yml

# TODO - this would be better as a template
- name: Prepare ingress settings
  ansible.builtin.set_fact:
    # https://github.dev/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
    grafana_ingress_values:
      grafana:
        grafana.ini:
          # TODO not sure why this is needed since we have nginx.ingress.kubernetes.io/app-root
          # TODO in fact the annotations are not being applied - need to look in the templates
          server:
            domain: "{{ k3s_cluster_domain }}"
            root_url: https://{{ k3s_cluster_domain }}/grafana/
            serve_from_sub_path: true
        ingress:
          enabled: true
          ingressClassName: nginx
          annotations:
            kubernetes.io/ingress.class: nginx
            nginx.ingress.kubernetes.io/ssl-redirect: "true"
            nginx.ingress.kubernetes.io/rewrite-target: /$2
            nginx.ingress.kubernetes.io/app-root: /grafana
          #  kubernetes.io/tls-acme: "true"
          hosts:
            - "{{ k3s_cluster_domain }}"
          # tls:
          #   - secretName: grafana-general-tls
          #     hosts:
          #       - gilesk.ddns.net
          path: /grafana
        adminPassword: "prom-operator"
        #
        # # To make Grafana persistent (Using Statefulset)
        # TODO - need a decent storage class to use this
        # persistence:
        #   enabled: true
        #   type: sts
        #   storageClassName: "storageClassName"
        #   accessModes:
        #     - ReadWriteOnce
        #   size: 20Gi
        #   finalizers:
        #     - kubernetes.io/pvc-protection
  when: ingress_controller_exists

- name: Install Grafana on the cluster
  kubernetes.core.helm:
    chart_repo_url: https://prometheus-community.github.io/helm-charts
    chart_ref: kube-prometheus-stack
    release_name: grafana-prometheus
    create_namespace: true
    namespace: monitoring
    state: present
    values: "{{ grafana_ingress_values | default({}) }}"
  retries: 5 # retries in case ingress is not ready
  delay: 10

- name: Create port forward script for Grafana
  ansible.builtin.copy:
    dest: "{{ bin_dir }}/grafana.sh"
    content: |
      #!/bin/bash

      # Start a port-forward to the Grafana and background it
      nohup kubectl -n monitoring port-forward deployment/grafana-prometheus 3000 &> /tmp/grafana-proxy.out &

      echo
      echo Grafana will be available at:
      echo   http://localhost:3000
    mode: "0755"
