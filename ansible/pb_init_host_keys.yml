# A playbook to generate the host_keys folder and set initial passwords
#
# This is to be run on new forks of this repo for new infrastructure:
# Run once to set up host keys, then commit the changes to your fork.
# - fork this repo
# - edit hosts.yml to describe your infrastructure
# - delete the existing vars/secrets/host_keys folder
# - create a vault password file ~/.ansible_vault_password mode 600
# - run this playbook to generate host keys for your nodes
#   - ansible-playbook pb_init_host_keys.yml
# - verify that the host keys are readable
#   - ansible-playbook pb_init_host_keys_read.yml --vault-password-file ~/.ansible_vault_password
#
# TODO - using a vault password file because this uses ansible-vault shell command
#      - find a way to avoid this and use --ask-vault-pass instead (but how
#        to pass the password to the shell command?)

# initial checks ###############################################################
- hosts: localhost
  gather_facts: false
  serial: 1

  tasks:
    - name: Check host_keys folder
      stat:
        path: "{{ host_keys_folder }}"
      ignore_errors: true
      register: host_keys_folder_stat

    - name: Check the master public key
      stat:
        path: "pub_keys/ansible_rsa.pub"
      register: master_key
      ignore_errors: true

    - name: Error if host_keys_folder already exists
      assert:
        that: not host_keys_folder_stat.stat.exists
        msg: "{{ host_keys_folder }} folder already exists, please remove it before running this playbook"

    - name: Error if no master key
      assert:
        that: master_key.stat.exists
        msg: "pub_keys/ansible_rsa.pub does not exist, please copy your master public key into pub_keys before running this playbook"

    - name: create secrets folder
      file:
        path: "{{ host_keys_folder }}"
        state: directory

# Validate that the turing pis have the master key authorized ##################
- hosts: turing_pis
  gather_facts: false

  tasks:
    - name: Check turing pi BMC has ssh keys
      raw: echo test

# generate ssh keys for the nodes ##############################################
- hosts: tp?_nodes
  gather_facts: false

  tasks:
    - name: Print a message
      delegate_to: localhost
      debug:
        msg: "generate ssh keys for {{ inventory_hostname }}"

    - name: delete old host keys file
      delegate_to: localhost
      known_hosts:
        name: "{{ inventory_hostname }}"
        state: absent

    - name: setup file names
      set_fact:
        prikey: "{{ host_keys_folder }}/{{ inventory_hostname }}"
        pubkey: "{{ host_keys_folder }}/{{ inventory_hostname }}.pub"

    - name: Generate a host keypair
      delegate_to: localhost
      community.crypto.openssh_keypair:
        type: ed25519
        path: "{{ prikey }}"
        mode: 0600

    - name: encrypt the private key into a vault variable
      delegate_to: localhost
      shell: |-
        ansible-vault encrypt_string --name '{{ inventory_hostname }}_pri' '{{ lookup("file", prikey) }}' --vault-password-file={{ vault_password_file }}
      register: vault_output

    - name: add encrypted private key into the host_keys file
      delegate_to: localhost
      blockinfile:
        state: present
        insertafter: EOF
        create: true
        dest: "{{ host_keys_vars }}"
        content: "{{ vault_output.stdout }}"
        marker: "# {mark} ANSIBLE MANAGED BLOCK {{ prikey }}"

    - name: read public key into a variable
      set_fact:
        public_key: "{{ inventory_hostname }} {{ lookup ('file', pubkey) }}"

    - debug:
        var: public_key

    - name: add public key into the known_hosts file
      delegate_to: localhost
      known_hosts:
        name: "{{ inventory_hostname }}"
        key: "{{ public_key }}"

    - name: add public key to host_keys file
      delegate_to: localhost
      blockinfile:
        state: present
        insertafter: EOF
        create: true
        dest: "{{ host_keys_vars }}"
        content: "{{ inventory_hostname }}_pub:\n    {{ public_key }}"
        marker: "# {mark} ANSIBLE MANAGED BLOCK {{ pubkey }}"

    - name: remove key files
      delegate_to: localhost
      file:
        name: "{{ item }}"
        state: absent
      with_fileglob: "{{ prikey }}*"
