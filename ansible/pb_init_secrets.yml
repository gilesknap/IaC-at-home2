# A playbook to generate the secrets folder and set initial passwords
#
# This is to be run on new forks of this repo for new infrastructure:
# Run once to set up credentials, then commit the changes to your fork.
# - fork this repo
# - edit hosts.yml to describe your infrastructure
# - delete the existing vars/secrets folder
# - remove all existing files in pub_keys
# - copy your public ssh key(s) into pub_keys
# - run this playbook to generate host keys for your nodes
---
- hosts: localhost
  gather_facts: false

  tasks:
    - name: Check secrets folder
      stat:
        path: "{{ playbook_dir }}/vars/secrets"
      register: secrets_dir

    - name: Error if exists
      assert:
        that: not secrets_dir.stat.exists
        msg: "vars/secrets folder already exists, please remove it before running this playbook"

    - name: create secrets folder
      file:
        path: directory_data.stat.path
        state: directory

    # - name: Generate the ansible keypair
    #   community.crypto.openssh_keypair:
    #     path: "{{ lookup('env', 'HOME') }}/.ssh/ansible_rsa"
    #     mode: 0600
    #     passphrase: "{{ ansible_keys_password }}"
    #     regenerate: full_idempotence
    #     size: 4096

# Validate password for each turing pi BMC root user - set the password if
# it is currently the default and add ssh keys to the authorized_keys file.
# Requires sshpass to be installed
- hosts: turing_pis
  gather_facts: false
  vars_prompt:
    - name: tpi_password
      prompt: Password to use for all turing pi BMC root users

  tasks:
    - name: Check turing pi BMC password
      delegate_to: localhost
      command: "sshpass -e ssh {{ tpi_user }}@{{ inventory_hostname }} echo test"
      ignore_errors: true
      register: tpi_password_check
      environment:
        SSHPASS: "{{ tpi_password }}"
      no_log: true

    - name: Fail on error
      delegate_to: localhost
      fail:
        msg: "Failed to connect to {{ inventory_hostname }}: check password"
      when: tpi_password_check.rc != 0

- hosts: tp?_nodes
  gather_facts: false

  tasks:
    - name: Print a message
      delegate_to: localhost
      debug:
        msg: "generate ssh keys for {{ inventory_hostname }}"
# -rw------- 1 root root    399 Oct 11 04:42 ssh_host_ed25519_key
# -rw-r--r-- 1 root root     93 Oct 11 04:42 ssh_host_ed25519_key.pub
