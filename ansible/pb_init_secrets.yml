# A playbook to generate the secrets folder and set initial passwords
#
# This is to be run on new forks of this repo for new infrastructure:
# Run once to set up credentials, then commit the changes to your fork.
# - fork this repo
# - edit hosts.yml to describe your infrastructure
# - delete the existing vars/secrets folder
# - remove all existing files in pub_keys
# - copy your public ssh key(s) into pub_keys
# - run this playbook to generate host keys for your nodes
---
- hosts: localhost
  gather_facts: false

  tasks:
    - name: Check secrets folder
      stat:
        path: "{{ secrets_dir }}"
      ignore_errors: true
      register: secrets_dir_stat

    - name: Check the master public key
      stat:
        path: "pub_keys/ansible_rsa.pub"
      register: master_key
      ignore_errors: true

    - name: Error if exists
      assert:
        that: not secrets_dir_stat.stat.exists
        msg: "vars/secrets folder already exists, please remove it before running this playbook"

    - name: Error if no master key
      assert:
        that: master_key.stat.exists
        msg: "pub_keys/ansible_rsa.pub does not exist, please copy your master public key into pub_keys before running this playbook"

    - name: create secrets folder
      file:
        path: "{{ secrets_dir }}"
        state: directory

# Validate that the turing pis have the master key authorized
- hosts: turing_pis
  gather_facts: false

  tasks:
    - name: Check turing pi BMC has ssh keys
      raw: echo test

# generate ssh keys for the nodes
- hosts: tp?_nodes
  gather_facts: false

  tasks:
    - name: Print a message
      delegate_to: localhost
      debug:
        msg: "generate ssh keys for {{ inventory_hostname }}"

    - name: Generate a host keypair
      delegate_to: localhost
      community.crypto.openssh_keypair:
        type: ed25519
        path: "{{ secrets_dir }}/{{ inventory_hostname }}"

    - name: Make a vault for the private key
      delegate_to: localhost
      community.crypto.openssh_keypair:
        type: ed25519
        path: "{{ secrets_dir }}/{{ inventory_hostname }}"

    - name: encrypt the private key into a vault variable
      delegate_to: localhost
      command: |-
        ansible-vault encrypt --vault-password-file={{ vault_password_file }} {{ secrets_dir }}/{{ inventory_hostname }}
