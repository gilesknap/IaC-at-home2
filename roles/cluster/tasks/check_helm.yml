# reusable task to see if a failed helm chart already exists and remove it
# if so. Then go ahead and install the chart.
#
# Variables:
#  ch_release_name: The name of the helm release
#  ch_namespace: The namespace of the helm release
#  ch_chart_repo_url: The URL of the helm chart repository
#  ch_chart_ref: The reference to the helm chart
#  ch_values: The values to pass to the helm chart
#  ch_force: Whether to force the re-installation of the helm chart

- name: Check for status of existing helm release for "{{ ch_release_name }}"
  # kubernetes.core.helm_info: does not return anything ?? using command instead
  ansible.builtin.command:
    cmd: helm status "{{ ch_release_name }}" --namespace "{{ ch_namespace }}"
  register: chart_state
  changed_when: false
  failed_when: false # Its OK if the chart does not yet exist

- name: Delete any failed chart "{{ ch_release_name }}"
  kubernetes.core.helm:
    release_name: "{{ ch_release_name }}"
    namespace: "{{ ch_namespace }}"
    state: absent
  when: '"STATUS: failed" in chart_state.stdout'

- name: Install the chart "{{ ch_release_name }}"
  kubernetes.core.helm:
    chart_repo_url: "{{ ch_chart_repo_url }}"
    chart_ref: "{{ ch_chart_ref }}"
    release_name: "{{ ch_release_name }}"
    create_namespace: true
    namespace: "{{ ch_namespace }}"
    values: "{{ ch_values | default('{}') | from_yaml }}"
  retries: 1
  delay: 20
  timeout: "{{ ch_timeout | default(300) }}"
